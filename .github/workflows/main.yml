# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Deploy to Heroku
        uses: pysan3/docker-compose-multiple-apps-heroku-deploy@v6.5
        with:
          # Email linked to your Heroku account
          email: ${{ secrets.HEROKU_EMAIL }}
          # Your Heroku API Key
          api_key: ${{ secrets.HEROKU_API_APP }}
          # Your Heroku App Name
          app_name: ${{ secrets.HEROKU_APP }}
          # docker-compose File Path
          docker_compose_file: './src/docker-compose.prod.yml'
          # List of Docker Images generated from docker-compose and Heroku app names with type
          heroku_apps: '[{"imagename": "wagtail_portfolio_blog_nginx", "appname": "wagtail_portfolio_blog_nginx_1", "apptype": "web"}, {"imagename": "wagtail_portfolio_blog_web", "appname": "wagtail_portfolio_blog_web_1", "apptype": "web"}, {"imagename": "postgres:12.0-alpine", "appname": "wagtail_portfolio_blog_db_1", "apptype": "web"}]'

          env_file: ".env"
          usedocker: true
        env:
          DJANGO_SETTINGS_MODULE: ${{secrets.DJANGO_SETTINGS_MODULE}}
          GSSENCMODE: ${{secrets.GSSENCMODE}}
          SECRET_KEY: ${{secrets.SECRET_KEY}}
          SQL_DATABASE: ${{secrets.SQL_DATABASE}}
          SQL_ENGINE: ${{secrets.SQL_ENGINE}}
          SQL_HOST: ${{secrets.SQL_HOST}}
          SQL_PASSWORD: ${{secrets.SQL_PASSWORD}}
          SQL_PORT: ${{secrets.SQL_PORT}}
          SQL_USER: ${{secrets.SQL_USER}}

